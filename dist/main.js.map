{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/myfridgelst/myfridge-details/myfridge-details.component.css","webpack:///./src/app/myfridgelst/myfridge-details/myfridge-details.component.html","webpack:///./src/app/myfridgelst/myfridge-details/myfridge-details.component.ts","webpack:///./src/app/myfridgelst/myfridge-list/myfridge-list.component.css","webpack:///./src/app/myfridgelst/myfridge-list/myfridge-list.component.html","webpack:///./src/app/myfridgelst/myfridge-list/myfridge-list.component.ts","webpack:///./src/app/myfridgelst/myfridge.service.ts","webpack:///./src/app/myfridgelst/myfridge.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <myfridge-list></myfridge-list>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MyfridgeList';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MyfridgeDetailsComponent } from './myfridgelst/myfridge-details/myfridge-details.component';\nimport { MyfridgeListComponent } from './myfridgelst/myfridge-list/myfridge-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MyfridgeDetailsComponent,\n    MyfridgeListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215ZnJpZGdlbHN0L215ZnJpZGdlLWRldGFpbHMvbXlmcmlkZ2UtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"food\\\" class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h2 *ngIf=\\\"food._id\\\">Food Details</h2>\\n    <h2 *ngIf=\\\"!food._id\\\">New Food Details</h2>\\n  </div>\\n</div>\\n<div *ngIf=\\\"food\\\" class=\\\"row\\\">\\n  <form class=\\\"col-md-12\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"food-name\\\">Name</label>\\n      <input class=\\\"form-control\\\" name=\\\"food-name\\\" [(ngModel)]=\\\"food.name\\\" placeholder=\\\"Name\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"food-date\\\">Date</label>\\n      <input class=\\\"form-control\\\" name=\\\"food-date\\\" [(ngModel)]=\\\"food.date\\\" placeholder=\\\"Date\\\"/>\\n    </div>\\n      <div class=\\\"form-group\\\">\\n      <label for=\\\"food-expiry\\\">Expiry</label>\\n      <input class=\\\"form-control\\\" name=\\\"food-expiry\\\" [(ngModel)]=\\\"food.expiry\\\" placeholder=\\\"Expiry\\\"/>\\n    </div>\\n      <div class=\\\"form-group\\\">\\n      <label for=\\\"food-left-overs\\\">Left-overs</label>\\n      <input class=\\\"form-control\\\" name=\\\"food-left-overs\\\" [(ngModel)]=\\\"food.left_overs\\\" placeholder=\\\"left-overs\\\"/>\\n    </div>\\n      <div class=\\\"form-group\\\">\\n      <label for=\\\"food-quantity\\\">Quantity</label>\\n      <input class=\\\"form-control\\\" name=\\\"food-quantity\\\" [(ngModel)]=\\\"food.quantity\\\" placeholder=\\\"Quantity\\\"/>\\n    </div>\\n    <button class=\\\"btn btn-primary\\\" *ngIf=\\\"!food._id\\\" (click)=\\\"createFood(food)\\\">Create</button>\\n    <button class=\\\"btn btn-info\\\" *ngIf=\\\"food._id\\\" (click)=\\\"updateFood(food)\\\">Update</button>\\n    <button class=\\\"btn btn-danger\\\" *ngIf=\\\"food._id\\\" (click)=\\\"deleteFood(food._id)\\\">Delete</button>\\n  </form>\\n</div>\"","import { Component, Input } from '@angular/core';\nimport { Food } from '../myfridge';\nimport { MyfridgeService } from '../myfridge.service';\n\n@Component({\n  selector: 'myfridge-details',\n  templateUrl: './myfridge-details.component.html',\n  styleUrls: ['./myfridge-details.component.css']\n})\n\nexport class MyfridgeDetailsComponent {\n\n  @Input()\n  food: Food;\n  @Input()\n  createHandler: Function;\n  @Input()\n  updateHandler: Function;\n  @Input()\n  deleteHandler: Function;\n\n  constructor (private foodService: MyfridgeService) {}\n\n  createFood(food: Food) {\n    this.foodService.createFood(food).then((newFood: Food) => {\n      this.createHandler(newFood);\n    });\n  }\n\n  updateFood(food: Food): void {\n    this.foodService.updateFood(food).then((updatedFood: Food) => {\n      this.updateHandler(updatedFood);\n    });\n  }\n\n  deleteFood(foodId: String): void {\n    this.foodService.deleteFood(foodId).then((deletedFoodId: String) => {\n      this.deleteHandler(deletedFoodId);\n    });\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215ZnJpZGdlbHN0L215ZnJpZGdlLWxpc3QvbXlmcmlkZ2UtbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-5\\\">\\n    <h2>Myfridge</h2>\\n    <ul class=\\\"list-group\\\">\\n      <li class=\\\"list-group-item\\\"\\n        *ngFor=\\\"let food of myfridgefood\\\"\\n        (click)=\\\"selectFood(food)\\\"\\n        [class.active]=\\\"food === selectedFood\\\">\\n        {{food.name}}\\n      </li>\\n    </ul>\\n    <button class=\\\"btn btn-warning\\\" (click)=\\\"createNewFood()\\\">New</button>\\n  </div>\\n  <div class=\\\"col-md-5 col-md-offset-2\\\">\\n    <myfridge-details\\n      [food]=\\\"selectedFood\\\"\\n      [createHandler]=\\\"addFood\\\"\\n      [updateHandler]=\\\"updateFood\\\"\\n      [deleteHandler]=\\\"deleteFood\\\">\\n    </myfridge-details>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Food } from '../myfridge';\nimport { MyfridgeService } from '../myfridge.service';\nimport { MyfridgeDetailsComponent } from '../myfridge-details/myfridge-details.component';\n\n@Component({\n  selector: 'myfridge-list',\n  templateUrl: './myfridge-list.component.html',\n  styleUrls: ['./myfridge-list.component.css'],\n  providers: [MyfridgeService]\n})\n\nexport class MyfridgeListComponent implements OnInit {\n\n\nmyfridgefood: Food[]\n  selectedFood: Food\n\n  constructor(private foodService: MyfridgeService) { }\n\n  ngOnInit() {\n\t  \n\t  this.foodService\n      .getFoods()\n      .then((myfridgefood: Food[]) => {\n        this.myfridgefood = myfridgefood.map((food) => {\n          return food;\n        });\n      });\n\t  \n  }\n  \n  \n  private getIndexOfFood = (foodId: String) => {\n    return this.myfridgefood.findIndex((food) => {\n      return food._id === foodId;\n    });\n  }\n  \n  \n  selectFood(food: Food) {\n    this.selectedFood = food\n  }\n  \n  \n  createNewFood() {\n    var food: Food = {\n      name: '',\n      date: '',\n\t  expiry: '',\n\t  left_overs:false,\n\t  quantity:parseInt('')\n    };\n\n    this.selectFood(food);\n\t\n  }\n  \n  deleteFood = (foodId: String) => {\n    var idx = this.getIndexOfFood(foodId);\n    if (idx !== -1) {\n      this.myfridgefood.splice(idx, 1);\n      this.selectFood(null);\n    }\n    return this.myfridgefood;\n  }\n  \n  addFood = (food: Food) => {\n \n\tif (food.name != '' && food.date != ''){\n\t\tthis.myfridgefood.push(food);\n    }\n\tthis.selectFood(food);\n    return this.myfridgefood;\n  }\n  \n  updateFood = (food: Food) => {\n    var idx = this.getIndexOfFood(food._id);\n    if (idx !== -1) {\n      this.myfridgefood[idx] = food;\n      this.selectFood(food);\n    }\n    return this.myfridgefood;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Food } from './myfridge';\nimport { Http, Response } from '@angular/http';\n\n@Injectable()\nexport class MyfridgeService {\n    private FoodsUrl = '/api/food';\n\n    constructor (private http: Http) {}\n\n    // get(\"/api/Foods\")\n    getFoods(): Promise<void | Food[]> {\n      return this.http.get(this.FoodsUrl)\n                 .toPromise()\n                 .then(response => response.json() as Food[])\n                 .catch(this.handleError);\n    }\n\n    // post(\"/api/Foods\")\n    createFood(newFood: Food): Promise<void | Food> {\n      return this.http.post(this.FoodsUrl, newFood)\n                 .toPromise()\n                 .then(response => response.json() as Food)\n                 .catch(this.handleError);\n    }\n\n    // get(\"/api/Foods/:id\") endpoint not used by Angular app\n\n    // delete(\"/api/Foods/:id\")\n    deleteFood(delFoodId: String): Promise<void | String> {\n      return this.http.delete(this.FoodsUrl + '/' + delFoodId)\n                 .toPromise()\n                 .then(response => response.json() as String)\n                 .catch(this.handleError);\n    }\n\n    // put(\"/api/Foods/:id\")\n    updateFood(putFood: Food): Promise<void | Food> {\n      var putUrl = this.FoodsUrl + '/' + putFood._id;\n      return this.http.put(putUrl, putFood)\n                 .toPromise()\n                 .then(response => response.json() as Food)\n                 .catch(this.handleError);\n    }\n\n    private handleError (error: any) {\n      let errMsg = (error.message) ? error.message :\n      error.status ? `${error.status} - ${error.statusText}` : 'Server error';\n      console.error(errMsg); // log to console instead\n    }\n}","export class Food {\n   _id?: string;\n\tname: string;\n\tdate: string;\n\texpiry: string;\n\tleft_overs: boolean;\n\tquantity: number;\n}\n ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}